name: CI

on: [push, pull_request]

jobs:
  build:
    name: Build

    runs-on: ubuntu-latest

    steps:
      - name: Checkout git repository
        uses: actions/checkout@v1
        with:
          fetch-depth: 0
      - name: Setup Node.js for use with Actions
        uses: actions/setup-node@v1
        with:
          node-version: '12.14.1'
      - name: Install Yarn
        run: curl -o- -L https://yarnpkg.com/install.sh | bash
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies with Yarn
        run: yarn install
      - name: Compile TypeScript
        run: yarn run build
      - name: Upload compiled TypeScript
        uses: actions/upload-artifact@v1
        with:
          name: tsc_output
          path: tsc_output
  lint:
    name: Lint

    runs-on: ubuntu-latest

    steps:
      - name: Checkout git repository
        uses: actions/checkout@v1
        with:
          fetch-depth: 0
      - name: Setup Node.js for use with Actions
        uses: actions/setup-node@v1
        with:
          node-version: '12.14.1'
      - name: Install Yarn
        run: curl -o- -L https://yarnpkg.com/install.sh | bash
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies with Yarn
        run: yarn install
      - name: Lint with XO
        run: yarn run xo
  style:
    name: Check style

    runs-on: ubuntu-latest

    steps:
      - name: Checkout git repository
        uses: actions/checkout@v1
        with:
          fetch-depth: 0
      - name: Setup Node.js for use with Actions
        uses: actions/setup-node@v1
        with:
          node-version: '12.14.1'
      - name: Install Yarn
        run: curl -o- -L https://yarnpkg.com/install.sh | bash
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies with Yarn
        run: yarn install
      - name: Check style with Prettier
        run: yarn run style
  test:
    name: Run unit tests

    runs-on: ubuntu-latest

    steps:
      - name: Checkout git repository
        uses: actions/checkout@v1
        with:
          fetch-depth: 0
      - name: Setup Node.js for use with Actions
        uses: actions/setup-node@v1
        with:
          node-version: '12.14.1'
      - name: Install Yarn
        run: curl -o- -L https://yarnpkg.com/install.sh | bash
      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies with Yarn
        run: yarn install
      - name: Run tests
        run: yarn run test
      - name: Submit test coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
